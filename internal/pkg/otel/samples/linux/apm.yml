receivers:
  otlp:
    protocols:
      grpc:
        endpoint: ${env:HOST:-0.0.0.0}:4317
      http:
        endpoint: ${env:HOST:-0.0.0.0}:4318

connectors:
  signaltometrics:
    logs:
      - name: service_summary
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: metricset.name
            default_value: service_summary
        sum:
          value: "1"
    datapoints:
      - name: service_summary
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: metricset.name
            default_value: service_summary
        sum:
          value: "1"
    spans:
      - name: service_summary
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: metricset.name
            default_value: service_summary
        sum:
          value: Int(AdjustedCount())
      - name: transaction.duration.histogram
        description: APM service transaction aggregated metrics as histogram
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: transaction.root
          - key: transaction.type
          - key: metricset.name
            default_value: service_transaction
          - key: elasticsearch.mapping.hints
            default_value: [_doc_count]
        unit: us
        exponential_histogram:
          value: Microseconds(end_time - start_time)
      - name: transaction.duration.summary
        description: APM service transaction aggregated metrics as summary
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: transaction.root
          - key: transaction.type
          - key: metricset.name
            default_value: service_transaction
          - key: elasticsearch.mapping.hints
            default_value: [aggregate_metric_double]
        unit: us
        histogram:
          buckets: [1]
          value: Microseconds(end_time - start_time)
      - name: transaction.duration.histogram
        description: APM transaction aggregated metrics as histogram
        ephemeral_resource_attribute: true
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
          - key: container.id
          - key: k8s.pod.name
          - key: service.version
          - key: service.instance.id # service.node.name
          - key: process.runtime.name # service.runtime.name
          - key: process.runtime.version # service.runtime.version
          - key: telemetry.sdk.version # service.language.version??
          - key: host.name
          - key: os.type # host.os.platform
          - key: faas.instance
          - key: faas.name
          - key: faas.version
          - key: cloud.provider
          - key: cloud.region
          - key: cloud.availability_zone
          - key: cloud.platform # cloud.servicename
          - key: cloud.account.id
        attributes:
          - key: transaction.root
          - key: transaction.name
          - key: transaction.type
          - key: transaction.result
          - key: event.outcome
          - key: metricset.name
            default_value: transaction
          - key: elasticsearch.mapping.hints
            default_value: [_doc_count]
        unit: us
        exponential_histogram:
          value: Microseconds(end_time - start_time)
      - name: transaction.duration.summary
        description: APM transaction aggregated metrics as summary
        ephemeral_resource_attribute: true
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
          - key: container.id
          - key: k8s.pod.name
          - key: service.version
          - key: service.instance.id # service.node.name
          - key: process.runtime.name # service.runtime.name
          - key: process.runtime.version # service.runtime.version
          - key: telemetry.sdk.version # service.language.version??
          - key: host.name
          - key: os.type # host.os.platform
          - key: faas.instance
          - key: faas.name
          - key: faas.version
          - key: cloud.provider
          - key: cloud.region
          - key: cloud.availability_zone
          - key: cloud.platform # cloud.servicename
          - key: cloud.account.id
        attributes:
          - key: transaction.root
          - key: transaction.name
          - key: transaction.type
          - key: transaction.result
          - key: event.outcome
          - key: metricset.name
            default_value: transaction
          - key: elasticsearch.mapping.hints
            default_value: [aggregate_metric_double]
        unit: us
        histogram:
          buckets: [1]
          value: Microseconds(end_time - start_time)
      - name: span.destination.service.response_time.sum.us
        description: APM span destination metrics
        ephemeral_resource_attribute: true
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: span.name
          - key: event.outcome
          - key: service.target.type
          - key: service.target.name
          - key: span.destination.service.resource
          - key: metricset.name
            default_value: service_destination
        unit: us
        sum:
          value: Double(Microseconds(end_time - start_time))
      - name: span.destination.service.response_time.count
        description: APM span destination metrics
        ephemeral_resource_attribute: true
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: span.name
          - key: event.outcome
          - key: service.target.type
          - key: service.target.name
          - key: span.destination.service.resource
          - key: metricset.name
            default_value: service_destination
        sum:
          value: Int(AdjustedCount())
      # event.success_count is populated using 2 metric definition with different conditions
      # and value for the histogram bucket based on event outcome. Both metric definition
      # are created using same name and attribute and will result in a single histogram.
      # We use mapping hint of aggregate_metric_double, so, only the sum and the count
      # values are required and the actual histogram bucket is ignored.
      - name: event.success_count
        description: Success count as a metric for service transaction
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: transaction.root
          - key: transaction.type
          - key: metricset.name
            default_value: service_transaction
          - key: elasticsearch.mapping.hints
            default_value: [aggregate_metric_double]
        conditions:
          - attributes["event.outcome"] != nil and attributes["event.outcome"] == "success"
        histogram:
          buckets: [1]
          count: Int(AdjustedCount())
          value: Int(AdjustedCount())
      - name: event.success_count
        description: Success count as a metric for service transaction
        include_resource_attributes:
          - key: service.name
          - key: deployment.environment # service.environment
          - key: telemetry.sdk.language # service.language.name
          - key: agent.name # set via elastictraceprocessor
        attributes:
          - key: transaction.root
          - key: transaction.type
          - key: metricset.name
            default_value: service_transaction
          - key: elasticsearch.mapping.hints
            default_value: [aggregate_metric_double]
        conditions:
          - attributes["event.outcome"] != nil and attributes["event.outcome"] != "success"
        histogram:
          buckets: [0]
          count: Int(AdjustedCount())
          value: Double(0)

processors:
  elastictrace:
  lsminterval:
    intervals:
      - duration: 1m
        statements:
          - set(resource.attributes["metricset.interval"], "1m")
          - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "1m"], "."))
          - set(attributes["processor.event"], "metric")
      - duration: 10m
        statements:
          - set(resource.attributes["metricset.interval"], "10m")
          - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "10m"], "."))
          - set(attributes["processor.event"], "metric")
      - duration: 60m
        statements:
          - set(resource.attributes["metricset.interval"], "60m")
          - set(attributes["data_stream.dataset"], Concat([attributes["metricset.name"], "60m"], "."))
          - set(attributes["processor.event"], "metric")
  transform:
    trace_statements:
      #appending '-otel-collector' to all service name
      - context: resource
        statements:
          - set(attributes["service.name"], Concat([attributes["service.name"], "otel-collector"], "-"))
          - set(attributes["deployment.environment"], "otel-collector")
      # copy attributes from old SemConv version into new SemConv fields. With this we can set destination service resource in enrichment.
      - context: span
        statements:
          - set(attributes["url.full"], attributes["http.url"])
          - set(attributes["url.domain"], attributes["net.peer.name"])
          - set(attributes["url.port"], attributes["net.peer.port"])
    metric_statements:
      #appending '-otel-collector' to all service name
      - context: resource
        statements:
          - set(attributes["service.name"], Concat([attributes["service.name"], "otel-collector"], "-"))
          - set(attributes["deployment.environment"], "otel-collector")
    log_statements:
      #appending '-otel-collector' to all service name
      - context: resource
        statements:
          - set(attributes["service.name"], Concat([attributes["service.name"], "otel-collector"], "-"))
          - set(attributes["deployment.environment"], "otel-collector")

exporters:
  elasticsearch:
    endpoint: ${env:ELASTICSEARCH_HOST:-http://localhost:9200}
    auth:
      authenticator: basicauth
    tls:
      insecure: true
    mapping:
      mode: otel
    metrics_dynamic_index:
      enabled: true
    logs_dynamic_index:
      enabled: true
    traces_dynamic_index:
      enabled: true
    flush:
      interval: 10s
  #    telemetry:
  #      log_request_body: true
  debug:
    verbosity: detailed

service:
  extensions: [basicauth]
  pipelines:
    metrics/otel-apm:
      receivers: [otlp]
      processors: [transform]
      exporters: [signaltometrics, elasticsearch]
    logs/otel-apm:
      receivers: [otlp]
      processors: [transform]
      exporters: [signaltometrics, elasticsearch]
    traces/otel-apm:
      receivers: [otlp]
      processors: [transform, elastictrace]
      exporters: [signaltometrics, elasticsearch]
    metrics/aggregated-metrics:
      receivers: [signaltometrics]
      processors: [lsminterval]
      exporters: [elasticsearch]
#  telemetry:
#    logs:
#      level: debug

extensions:
  basicauth:
    client_auth:
      username: ${env:ELASTICSEARCH_USERNAME:-admin}
      password: ${env:ELASTICSEARCH_PASSWORD:-changeme}
